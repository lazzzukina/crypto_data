[tool.ruff]
target-version = "py312"
line-length = 120

[tool.ruff.format]
quote-style = "single"
indent-style = "space"
docstring-code-format = true

[tool.ruff.lint]
select = [
    "A",
    "ARG",
    "ASYNC",
    "B",
    "BLE",
    "C",
    "C4",
    "C90",
    "COM",
    "DJ",
    "DTZ",
    "E",
    "EM",
    "ERA",
    "F",
    "FBT",
    "FIX",
    "FLY",
    "FURB",
    "G",
    "I",
    "ICN",
    "INT",
    "ISC",
    "LOG",
    "N",
    "PERF",
    "PIE",
    "PL",
    "PTH",
    "PYI",
    "Q",
    "RET",
    "RSE",
    "RUF",
    "S",
    "SIM",
    "SLF",
    "SLOT",
    "T",
    "T10",
    "T20",
    "TCH",
    "TD",
    "TID",
    "TRY",
    "UP",
    "W",
    "YTT",
]
ignore = [
    "COM812",
    "ISC001",
]
unfixable = [
    # Don't touch unused imports
    "F401",
]

[tool.ruff.lint.isort]
force-single-line = true
order-by-type = false

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"test_*.py" = ["PLR2004", "S101", "TID252"]
"*/migrations/*.py" = ["RUF012", "E501"]
"settings/main.py" = ["F403", "F405", "TID252"]

[tool.ruff.lint.flake8-bandit]
check-typed-exception = true

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.mccabe]
# Flag errors (`C901`) whenever the complexity level exceeds 10.
max-complexity = 10

[tool.ruff.lint.pylint]
max-args = 6

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
ignore_missing_imports = true
check_untyped_defs = true
